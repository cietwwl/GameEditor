/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package com.pip.game.data.quest.pqe;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUMBER_CONSTANT = 5;
  /** RegularExpression Id. */
  int DECIMAL_CONSTANT = 6;
  /** RegularExpression Id. */
  int HEX_CONSTANT = 7;
  /** RegularExpression Id. */
  int STRING_CONSTANT = 8;
  /** RegularExpression Id. */
  int IDENTIFIER = 9;
  /** RegularExpression Id. */
  int LETTER = 10;
  /** RegularExpression Id. */
  int DIGIT = 11;
  /** RegularExpression Id. */
  int LPAREN = 12;
  /** RegularExpression Id. */
  int RPAREN = 13;
  /** RegularExpression Id. */
  int LBRACE = 14;
  /** RegularExpression Id. */
  int RBRACE = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int LBRACKET = 18;
  /** RegularExpression Id. */
  int RBRACKET = 19;
  /** RegularExpression Id. */
  int FULLSTOP = 20;
  /** RegularExpression Id. */
  int ASSIGN = 21;
  /** RegularExpression Id. */
  int GT = 22;
  /** RegularExpression Id. */
  int LT = 23;
  /** RegularExpression Id. */
  int EQ = 24;
  /** RegularExpression Id. */
  int LE = 25;
  /** RegularExpression Id. */
  int GE = 26;
  /** RegularExpression Id. */
  int NE = 27;
  /** RegularExpression Id. */
  int PLUS = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int MULTIPLY = 30;
  /** RegularExpression Id. */
  int DIVIDE = 31;
  /** RegularExpression Id. */
  int MOD = 32;
  /** RegularExpression Id. */
  int AND = 33;
  /** RegularExpression Id. */
  int OR = 34;
  /** RegularExpression Id. */
  int ANDB = 35;
  /** RegularExpression Id. */
  int ORB = 36;
  /** RegularExpression Id. */
  int LSHIFT = 37;
  /** RegularExpression Id. */
  int RSHIFT = 38;
  /** RegularExpression Id. */
  int PLUSASSIGN = 39;
  /** RegularExpression Id. */
  int MINUSASSIGN = 40;
  /** RegularExpression Id. */
  int MULTIPLYASSIGN = 41;
  /** RegularExpression Id. */
  int DIVIDEASSIGN = 42;
  /** RegularExpression Id. */
  int MODASSIGN = 43;
  /** RegularExpression Id. */
  int ANDBASSIGN = 44;
  /** RegularExpression Id. */
  int ORBASSIGN = 45;
  /** RegularExpression Id. */
  int PLUSPLUS = 46;
  /** RegularExpression Id. */
  int MINUSMINUS = 47;
  /** RegularExpression Id. */
  int LSHIFTASSIGN = 48;
  /** RegularExpression Id. */
  int RSHIFTASSIGN = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<NUMBER_CONSTANT>",
    "<DECIMAL_CONSTANT>",
    "<HEX_CONSTANT>",
    "<STRING_CONSTANT>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&&\"",
    "\"||\"",
    "\"&\"",
    "\"|\"",
    "\"<<\"",
    "\">>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"&=\"",
    "\"|=\"",
    "\"++\"",
    "\"--\"",
    "\"<<=\"",
    "\">>=\"",
  };

}
